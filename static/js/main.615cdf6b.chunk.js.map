{"version":3,"sources":["Components/TodoList.jsx","Components/TodoInput.jsx","Components/TodoApp.jsx","App.js","index.js"],"names":["TodoList","text","Todos","setTodos","todoId","id","className","onClick","filter","z","width","height","viewBox","class","fill","xmlns","fill-rule","d","TodoInput","Input","setInput","fetch","map","data","todo","onSubmit","e","preventDefault","alert","trim","Math","random","onChange","i","console","log","target","value","type","placeholder","length","TodoApp","useState","App","ReactDOM","render","document","getElementById"],"mappings":"mKA0BeA,EAvBE,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAMvC,OACI,mCACI,qBAAIC,GAAID,EAAQE,UAAU,yBAA1B,UACKL,EACD,sBAAMK,UAAU,cAAhB,SACI,wBAAQA,UAAU,aAAaC,QATzB,WAClBJ,EAASD,EAAMM,QAAO,SAACC,GAAD,OAAOA,EAAEJ,KAAOD,OAQ1B,SACI,qBAAKM,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,MAAM,mBAAmBC,KAAK,eAAeC,MAAM,6BAArG,SACI,sBAAMC,YAAU,UAAUC,EAAE,2TCuCzCC,EAnDG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUlB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SA6BnCkB,EAAQnB,EAAMoB,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAUpB,SAAUA,EAAUD,MAAOA,EAAqBE,OAAQmB,EAAKlB,GAAIJ,KAAMsB,EAAKC,MAArCD,EAAKlB,OAExF,OACI,mCACI,sBAAKC,UAAU,mCAAf,UACI,uBAAMmB,SAhCE,SAACC,GACjBA,EAAEC,iBACY,KAAVR,EACAS,MAAM,6BAGe,KAAjBT,EAAMU,OACND,MAAM,yBAGNzB,EAAS,GAAD,mBACDD,GADC,CAEJ,CACIsB,KAAML,EACNd,GAAoB,GAAhByB,KAAKC,aAGjBX,EAAS,OAeoBd,UAAU,eAAvC,UACI,oBAAIA,UAAU,UAAd,uBACA,uBAAO0B,SAZF,SAACC,GAClBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBjB,EAASa,EAAEG,OAAOC,QAUyBA,MAAOlB,EAAOb,UAAU,sBAAsBgC,KAAK,OAAOC,YAAY,kBACrG,wBAAQD,KAAK,SAAShC,UAAU,cAAhC,oBAEJ,2CAAcJ,EAAMsC,OAApB,YACA,qBAAKlC,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,SACKe,YCtBVoB,EAlBC,WAAM,MAEQC,mBAAS,IAFjB,mBAEXvB,EAFW,KAEJC,EAFI,OAGQsB,mBAAS,IAHjB,mBAGXxC,EAHW,KAGJC,EAHI,KAKlB,OACI,qBAAKG,UAAU,WAAf,SACI,cAAC,EAAD,CACIa,MAAOA,EACPC,SAAUA,EACVlB,MAAOA,EACPC,SAAUA,OCNXwC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.615cdf6b.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Todo.css\";\r\n\r\nconst TodoList = ({ text, Todos, setTodos, todoId }) => {\r\n    // delete Handler Function\r\n    const deleteHandler = () => {\r\n        setTodos(Todos.filter((z) => z.id !== todoId))\r\n    }\r\n    // \r\n    return (\r\n        <>\r\n            <li id={todoId} className=\"list-group-item shadow\">\r\n                {text}\r\n                <span className=\"float-right\">\r\n                    <button className=\"delete-btn\" onClick={deleteHandler}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\" />\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport './Todo.css'\r\n\r\nconst TodoInput = ({ Input, setInput, Todos, setTodos }) => {\r\n    // Form Handler Function\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        if (Input === \"\") {\r\n            alert(\"Please Fill input First!!\")\r\n        }\r\n        else {\r\n            if (Input.trim() === \"\") {\r\n                alert(\"Spaces are't Allowed\")\r\n            }\r\n            else {\r\n                setTodos([\r\n                    ...Todos,\r\n                    {\r\n                        todo: Input,\r\n                        id: Math.random() * 10\r\n                    }\r\n                ])\r\n                setInput(\" \");\r\n            }\r\n        }\r\n    }\r\n    // Input Handler fucntion\r\n    const inputHandler = (i) => {\r\n        console.log(i.target.value)\r\n        setInput(i.target.value)\r\n    }\r\n    // Array Fetch Function\r\n    const fetch = Todos.map((data) => <TodoList setTodos={setTodos} Todos={Todos} key={data.id} todoId={data.id} text={data.todo} />)\r\n    // Return\r\n    return (\r\n        <>\r\n            <div className=\"input_div p-5 shadow text-center\">\r\n                <form onSubmit={formHandler} className=\"form-div row\">\r\n                    <h1 className=\"mx-auto\">Todo-List</h1>\r\n                    <input onChange={inputHandler} value={Input} className=\"form-control col-10\" type=\"text\" placeholder=\"Enter Todo...\" />\r\n                    <button type=\"submit\" className=\"col-2 mybtn\">Add</button>\r\n                </form>\r\n                <h3>You Have {Todos.length} Todos</h3>\r\n                <div className=\"todo-container\">\r\n                    <ul className=\"list-group\">\r\n                        {fetch}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoInput;","import React, { useState } from 'react';\r\n// import Todo from './TodoList';\r\nimport './Todo.css';\r\nimport TodoInput from './TodoInput';\r\n\r\n\r\nconst TodoApp = () => {\r\n    // Hooks\r\n    const [Input, setInput] = useState(\"\");\r\n    const [Todos, setTodos] = useState([]);\r\n    // Return\r\n    return (\r\n        <div className=\"main-div\">\r\n            <TodoInput\r\n                Input={Input}\r\n                setInput={setInput}\r\n                Todos={Todos}\r\n                setTodos={setTodos}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoApp;","import React from 'react';\nimport TodoApp from './Components/TodoApp';\n\nconst App = () => {\n  return (\n    <>\n      <TodoApp />\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}